from ast import List
from collections import defaultdict, deque


class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        ids = [0] * n
        id_to_size = dict()
        idx = 0

        for i in range(n):
            if ids[i] == 0:
                idx += 1
                size = 1
                q = deque([i])
                ids[i] = idx
                while q:
                    u = q.popleft()
                    for v in range(n):
                        if ids[v] == 0 and graph[u][v] == 1:
                            size += 1
                            q.append(v)
                            ids[v] = idx
                id_to_size[idx] = size
        
        id_to_initials = defaultdict(int)
        for u in initial:
            id_to_initials[ids[u]] += 1
        
        ans, ans_removed = n + 1, 0
        for u in initial:
            removed = (id_to_size[ids[u]] if id_to_initials[ids[u]] == 1 else 0)
            if removed > ans_removed or (removed == ans_removed and u < ans):
                ans, ans_removed = u, removed
        
        return ans